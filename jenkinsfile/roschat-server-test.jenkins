#!groovy

def SERVER_VER="${params.VER}"
STATUS="Успешно"

properties([disableConcurrentBuilds()])

pipeline{
    agent {
        label ''
    }
    stages{
        stage("Очистка сборочной директории"){
            steps{
                deleteDir();
            }
        }
        stage("Клонировиние GIT"){
            steps{
                script{
                    try{
                        git 'ssh://bezpalko_p@10.10.199.35/opt/git/firelink/test-roschat-ms'
                    }catch(err){
                        currentBuild.result = "Failure"
                        error("Невозможно выполниь клонированние из репозитория git")
                    }
                }
            }
        }
        stage("Тестирование"){
            steps{
                script{
                    try{
                        sh '/var/jenkins_home/tools/hudson.plugins.gradle.GradleInstallation/Gradle-5/bin/gradle clean test'
                    }catch(err){
                        STATUS="Провал";
                    }
                }
            }
        }
        stage("Формирование отчёта"){
            steps{
                allure includeProperties: false, jdk: '', results: [[path: 'build/allure-results']]
            }
        }
    }
    post{
        always{
            echo "${SERVER_VER}"
            emailext body: "Тестируемая версия - ${SERVER_VER} \n Результат тестирования - ${STATUS} \n Отчет - ${BUILD_URL}/allure", subject: 'Тестирование Росчат сервера', to: 'bezpalko'
        }
    }
}